#version 2
#added deposit and withdraw and edit error handling 

import random
import time

class SimpleBankingSystem:
    #9 functions
    def __init__(self):
        self.accounts = {}
        self.usernames = {}
        self.logged_in_account = None

    def generate_random_account_number(self): #generate random account number
        while True:
            random_account_number = random.randint(100000, 999999)
            if random_account_number not in self.accounts:
                return random_account_number

    def create_account(self, username, pin, initial_balance): #create account, unique username,pin, and initial balance
        while True:
            try:
                initial_balance = float(initial_balance)
                if initial_balance < 100:
                    print("Processing Request to Create an Account...")
                    time.sleep(2)
                    print("Initial balance must be ₱100 or more. Please try again.")
                    initial_balance = input("Enter initial balance: ")
                else:
                    break
            except ValueError:
                print("Processing Request to Create an Account...")
                time.sleep(2)
                print(f"Invalid input. Please enter a numerical value.")
                initial_balance = input("Enter initial balance: ")
        print("\n----Account Details----")
        print("Username: ", username)
        print("Pin: ", pin)
        print("Initial Balance: ", initial_balance)
        print("------------------------")
        answer = input("Do you wish to continue creating your account? (yes/no): ").lower()
        while True:
            if answer in ['yes', 'y']:
                print("Processing Request to Create an Account...")
                time.sleep(2)
                break
            elif confirmation in ['no', 'n']:
                print("Account creation is void.")
                print("----------------------------------------\n")
                break
            else:
                print("Invalid input. Please enter 'yes' or 'no'.")
                break       

        account_number = self.generate_random_account_number()

        while account_number in self.accounts or username in self.usernames:
            print("Username already exists. Please try again.")
            account_number = self.generate_random_account_number()
            username = bank_system.input_username("")
            print("Processing Request to Create an Account...")
            time.sleep(2)

        self.accounts[account_number] = {'Username': username, 'PIN': pin, 'Balance': initial_balance, 'TransactionHistory': []}
        self.usernames[username] = account_number
        print(f"Account created successfully. Your account number is: {account_number}\n")

    def log_in(self, account_number, pin): #account number, and pin
        while True:
            if account_number not in self.accounts:
                print("Account number not found. Please try again.")
                return False
            else:
                try:
                    entered_pin = int(pin)
                    if account_number in self.accounts and self.accounts[account_number]['PIN'] == pin:
                        self.logged_in_account = account_number
                        return True
                    else:
                        print("Confirming your Identity...")
                        time.sleep(2)
                        print("Incorrect PIN. Please try again.")
                        pin = input("Enter PIN: ")
                except ValueError:
                    print("Confirming your Identity...")
                    time.sleep(2)
                    print("Invalid PIN. Please enter a numeric PIN.")
                    pin = input("Enter PIN: ")

    def log_out(self): #ilologout yung nakalogin
        print("Logging Out...")
        time.sleep(2)
        print("Successfully logged out.")
        print("----------------------------------------\n")
        self.logged_in_account = None

    def check_balance(self, account_number): #check current balance
        print(f"Current Balance for Account {account_number} ({self.accounts[account_number]['Username']}):  ₱{self.accounts[account_number]['Balance']}")

    def deposit(self, account_number): #deposit money greater than equals 10
        while True:
            try:
                amount = int(input("Enter deposit amount: "))
                if amount < 10:
                    print("Minimum deposit amount is ₱10. Please enter a higher amount.")
                elif amount >= 10:
                    while True:
                        confirmation = input(f"Are you sure you want to deposit ₱{amount:.2f} to your account? (yes/no): ").lower()
                        if confirmation in ['yes', 'y']:
                            self.accounts[account_number]['Balance'] += amount
                            self.accounts[account_number]['TransactionHistory'].append(f"Deposited ₱{amount}")
                            print("Deposit successful.")
                            print("----------------------------------------\n")    
                            break
                        if confirmation in ['no', 'n']:
                            print("Deposit canceled.")
                            print("----------------------------------------\n")
                            break
                        else:
                            print("Invalid input. Please enter 'yes' or 'no'.")
                    break            
                else:
                    print("Invalid input. Please enter a valid numeric amount.")
            except ValueError:
                print("Invalid input. Please enter a numerical value.")

    def withdraw(self, account_number):
        acciunt = account_number
        if acciunt == account_number:
            pin = input("Enter PIN: ")
            if bank_system.log_in(acciunt, pin):
                print("Confirming your Identity...")
                time.sleep(2)
                while True:
                    try:
                        print ("--------------------------------------------")
                        bank_system.check_balance(account_number)
                        print ("--------------------------------------------")
                        amount = float(input("Enter withdrawal amount: "))
                        if amount <= 0:
                            print("Invalid withdrawal amount. Please enter a positive amount.")
                        elif amount > self.accounts[account_number]['Balance']:
                            print("Insufficient funds. Withdrawal canceled.")
                            print("----------------------------------------\n")
                            break
                        else:
                            while True:
                                confirmation = input(f"Are you sure you want to withdraw ₱{amount:.2f} from your account? (yes/no): ").lower()
                                if confirmation in ['yes', 'y']:
                                    self.accounts[account_number]['Balance'] -= amount
                                    self.accounts[account_number]['TransactionHistory'].append(f"Withdrew ₱{amount}")

                                    if self.accounts[account_number]['Balance'] < 100:
                                        print("Warning: Your account balance is now below ₱100. Consider making a deposit to avoid account closure.")

                                    print("Withdrawal successful.")
                                    print("----------------------------------------\n")
                                    break
                                elif confirmation in ['no', 'n']:
                                    print("Withdrawal canceled.")
                                    print("----------------------------------------\n")
                                    break
                                else:
                                   print("Invalid input. Please enter 'yes' or 'no'.")
                            break       
                    except ValueError:
                       print("Invalid input. Please enter a valid numeric amount.")

    def input_pin(self, pin):
        while True:
            pin = input("Set your 8-digit PIN: ")
            if len(pin) == 8 and pin.isdigit():
                return pin
            else:
                print("Invalid PIN. Please enter a 8-digit PIN.")
    
    def input_username(self, username):
        while True:
            Fname = input("Enter your First Name: ").capitalize()
            if not Fname.isalpha():
                print("Please enter letters only.")
            else:
                Lname = input("Enter your Last Name: ").capitalize()
                if not Lname.isalpha():
                    print("Please enter letters only.")
                else:
                    username = f"{Fname} {Lname}"
                    return username
                    
bank_system = SimpleBankingSystem()

# Main loop
while True:
    print("----Welcome to GengGeng Bank----")
    print("\nLogin Interface")
    print("1. Create Account")
    print("2. Log In")
    print("3. Exit\n")

    choice = input("Enter your choice: ")

    if choice == '1':
        username = bank_system.input_username("")
        pin = bank_system.input_pin("")
        initial_balance = (input("Enter your initial balance:"))
        bank_system.create_account(username, pin, initial_balance)
                                 
        
    elif choice == '2':
        while True:
            account_number = input("Enter account number: ")
            if account_number.isdigit():
                account_number = int(account_number)
                break
            else:
                print("Invalid input. Account number must be a number.")

        pin = input("Enter PIN: ")
        if bank_system.log_in(account_number, pin):
            print("Logging in...")
            time.sleep(2)
            print("Log-in successful.\n")
            print("----------------------------------------")

            while True:
                print("-----MAIN MENU-----\n")
                bank_system.check_balance(account_number)
                print(" ")

                print("1. Deposit")
                print("2. Withdraw")
                print("3. Log out")
                print("----------------------------------------\n")

                choice = input("Enter your choice: ")
                print("\n")

                if choice == '1':
                    bank_system.deposit(account_number)

                elif choice == '2':
                    bank_system.withdraw(account_number)

                elif choice == '3':
                    bank_system.log_out()
                    break

                else:
                    print("Invalid Input! Please Select 1-3 only!!!")
                    print("----------------------------------------\n")

    elif choice == '3':
        print("Thank you for using our Bank System. \nExited the Program.")
        break

    else:
        print("Invalid Input! Please Select 1-3 only!!!")
        print("\n----------------------------------------\n")
